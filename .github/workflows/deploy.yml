name: 🚀 Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - dev
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write
  contents: read

defaults:
  run:
    shell: bash

jobs:
  lint:
    name: ⬣ ESLint
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
        version: 8

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          cache: pnpm
          cache-dependency-path: ./package.json
          node-version: 18

      - name: 📥 Install deps
        run: pnpm install

      - name: 🔬 Lint
        run: pnpm run lint

  typecheck:
    name: ʦ TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
        version: 8

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          cache: pnpm
          cache-dependency-path: ./package.json
          node-version: 18

      - name: 📥 Install deps
        run: pnpm install

      - name: 🔎 Type check
        run: pnpm run typecheck --if-present

  vitest:
    name: ⚡ Vitest
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
        version: 8

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          cache: pnpm
          cache-dependency-path: ./package.json
          node-version: 18

      - name: 📥 Install deps
        run: pnpm install

      - name: ⚡ Run vitest
        run: pnpm run test -- --coverage

  cypress:
    name: ⚫️ Cypress
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: 🏄 Copy test env vars
        run: cp .env.example .env

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
        version: 8

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          cache: pnpm
          cache-dependency-path: ./package.json
          node-version: 18

      - name: 📥 Install deps
        run: pnpm install

      - name: 🏗 Build
        run: pnpm run build

      - name: 🌳 Cypress run
        uses: cypress-io/github-action@v6
        with:
          start: pnpm run dev
          wait-on: "http://localhost:8811"
        env:
          PORT: "8811"

  deploy:
    needs: [lint, typecheck, vitest, cypress]
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
        version: 8

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          cache: pnpm
          cache-dependency-path: ./package.json
          node-version: 18

      - name: 👀 Env
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Git ref:    ${{ github.ref }}"
          echo "GH actor:   ${{ github.actor }}"
          echo "SHA:        ${{ github.sha }}"
          VER=`node --version`; echo "Node ver:   $VER"
          VER=`npm --version`; echo "npm ver:    $VER"

      - name: 📥 Install deps
        run: pnpm install
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
        version: 8

      - name: 🏗 Build
        run: pnpm run build

      - name: 🛠 Install Arc
        run: pnpm i -g @architect/architect

      - name: 🚀 Staging Deploy
        if: github.ref == 'refs/heads/dev'
        run: arc deploy --staging --prune
        env:
          CI: true
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: 🚀 Production Deploy
        if: github.ref == 'refs/heads/main'
        run: arc deploy --production --prune
        env:
          CI: true
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
